{"version":3,"sources":["webpack:///./src/number/operators.js?7c70**"],"names":["nd","require","GradOps","Number","Operators","module","exports","window","dot","nbA","nbB","stopGrad","prefix","_dot$1d","sA","sB","nS","newShape","newValue","Float32Array","v","value","_dot$2d","pA","pB","getVolume","selector","map","d","px","indexGenerator","getSpace","aVx","bVx","vx","r","idx","c","_checkShapeThenRun","ndA","ndB","shape","space","length","Error","sA$l","i","console","warn","join","ret","T","slice","reverse","rvx","reduce","s","pow","hat","Math","exp","grad","father","vjp_op","x","tanh","sigmoid","relu","validateOps","valB","vecMapping","ops","vA","vB","numMapping","isNumber","add","a","b","addOp","d1","d2","mapping","minus","minusOp","mul","mulOp","div","divOp"],"mappings":"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","file":"hot/hot-update.js","sourcesContent":["\"use strict\";\nconst nd = require('./ndarray');\nconst GradOps = require('./autograd/gradOps');\nconst Number = require('./number');\n\nconst Operators = {}\n\nif (typeof module !== 'undefined') {\n  module.exports   = Operators;\n} \nif (typeof window !== 'undefined') {\n  window.Operators = Operators;\n}\n\nOperators.dot = (nbA,nbB, stopGrad, prefix)=>{\n  stopGrad = stopGrad?stopGrad:false;\n  const _dot$1d = (sA, sB, nS)=>{\n    let newShape = [1], newValue = new Float32Array(1);\n    for(let v = 0; v < nS; v++){\n      newValue[0] += nbA.value[v]*nbB.value[v];  \n    }\n    return Number(newValue, newShape);\n  }\n  const _dot$2d = (sA, sB, nS, pA, pB)=>{\n    let newShape = [ sA[0],sB[1] ];\n    let newValue = new Float32Array( nd.getVolume(newShape) );\n    const selector = newShape.map(d=>[0,d,1]);\n    for(let px of nd.indexGenerator(selector, nd.getSpace(newShape) ) ){\n      let aVx  = 0, bVx = 0, vx = px.vx, r = px.idx[0], c = px.idx[1];\n      for(let v = 0; v < nS; v += 1){\n        aVx = r*pA[0] + v;\n        bVx = c + v*pB[0];\n        newValue[vx] += nbA.value[aVx]*nbB.value[bVx];\n      }\n    } \n    return Number(newValue, newShape);\n  }\n  const _checkShapeThenRun = (ndA, ndB)=>{\n    const sA = nbA.shape, sB = nbB.shape;\n    const pA = nbA.space, pB = nbB.space;\n    if(sA.length==1 && sB.length==1){\n      const nS = sA[0]===sB[0]?sA[0]:null;\n      if(nS===null){ throw Error( 'shape not consitent' ) }  \n      return _dot$1d(sA, sB, nS);\n    }\n    else if(sA.length==2 && sA.length==2){\n      const nS = sA[1]===sB[0]?sA[1]:null;\n      return _dot$2d(sA, sB, nS, pA, pB);\n    }\n    else if(sA.length>2 && sB.length ==2){\n      const sA$l = sA.length;\n      const nS = sA[sA$l - 1]===sB[0]?sA[sA$l - 1]:null;\n      if(nS===null){ throw Error( 'shape not consitent' ) }  \n      let selector = sA.map((d,i)=>(i < (sA$l - 2))?[0,d,1]:d);\n      console.warn(''+selector);\n      for(let px of nd.indexGenerator(selector, sA)){\n        console.warn('px',px.idx.join(':'));\n      }\n    }\n    else if(sA.length>2 && sB.length >2){\n      throw Error( 'not implement' );\n    }\n    else{\n      throw Error( 'shape not consitent' );\n    }\n  }\n\n  let ret = _checkShapeThenRun(nbA, nbB);\n  \n  if(stopGrad===false && GradOps.dot){\n    console.warn('go there')\n    ret = GradOps.dot(ret, [nbA,nbB]);\n  }\n  return ret;\n};\n\n\nOperators.T = (nbA, stopGrad)=>{\n  // validateDotShape(a.shape,b.shape);\n  stopGrad = stopGrad?stopGrad:false;\n  const sA = nbA.shape, space = nbA.space;\n  let newShape = sA.slice().reverse();\n  let newValue = new Float32Array(nd.getVolume(newShape));\n  const selector = newShape.map(d=>[0,d,1]);\n  for( let px of nd.indexGenerator(selector, nd.getSpace(newShape)) ){\n    const idx = px.idx, vx = px.vx;\n    const rvx = idx.slice().reverse().reduce((s,d,i)=>s+d*space[i],0);\n    newValue[vx] = nbA.value[rvx];\n  }\n  return Number(newValue, newShape);\n};\n\nOperators.pow = (nd, hat, stopGrad)=>{\n  stopGrad = stopGrad?stopGrad:false;\n  let newValue = nd.value.map(d=>Math.pow(d,hat));\n  let ret = Number(newValue, nd.shape);\n  if(stopGrad===false && GradOps.pow){\n    ret = GradOps.pow(ret, nd, hat);\n  }\n  console.warn(ret);\n  return ret;\n}\n\nOperators.exp = (nd, stopGrad)=>{\n  stopGrad = stopGrad?stopGrad:false;\n  let newValue = nd.value.map(d=>Math.exp(d));\n  let ret      = Number(newValue, nd.shape);\n  if(nd.grad){\n    ret.grad = [{ father: nd.grad, \n      vjp_op: (x)=>Math.exp(x) }]\n  }\n  return ret;\n}\n\nOperators.tanh = (nd, stopGrad)=>{\n  stopGrad = stopGrad?stopGrad:false;\n  let newValue = nd.value.map(d=>Math.tanh(d));\n  let ret      = Number(newValue, nd.shape);\n  if(GradOps.tanh){\n    ret = GradOps.tanh(ret, nd);\n  }\n  return ret;\n}\n\nOperators.sigmoid = (nd,stopGrad)=>{\n  stopGrad = stopGrad?stopGrad:false;\n  let newValue = nd.value.map(d=>0.5*(Math.tanh(d)+1.0));\n\n  return Number(newValue, nd.shape);\n}\n\nOperators.relu = (nd,stopGrad)=>{\n  throw Error('not implement');\n};\n\nconst validateOps = (nbA, valB)=>{\n  const vecMapping = (ndA, ndB, ops)=>{\n    let vA = ndA.value, vB = ndB.value;\n    return vA.map((d,i)=>ops(vA[i], vB[i]));\n  }\n\n  const numMapping = (ndA, vB, ops)=>{\n    let vA = ndA.value;\n    return vA.map((d,i)=>ops(d,vB));\n  }\n  // console.warn(typeof nbA, typeof valB);\n  if( Number().isNumber(nbA) && typeof valB === 'number' ){\n    return numMapping;\n  }\n  if( Number().isNumber(nbA) && Number().isNumber(valB) ){\n    return vecMapping;\n  }\n  throw Error('invalide object type');\n}\n\nOperators.add = (a,b,stopGrad)=>{\n  stopGrad = stopGrad?stopGrad:false;\n  const addOp   = (d1,d2)=>d1+d2;\n  const mapping = validateOps(a,b);\n  let newValue  = mapping(a, b, addOp);\n  let ret = Number(newValue, a.shape);\n  if(stopGrad===false && GradOps.add){\n    ret = GradOps.add(ret, [a,b]);\n  }\n  return ret;\n};\n\nOperators.minus = (a,b,stopGrad)=>{\n  stopGrad = stopGrad?stopGrad:false;\n  const minusOp = (d1,d2)=>d1-d2;\n  const mapping = validateOps(a,b);\n  let newValue  = mapping(a, b, minusOp);\n  let ret = Number(newValue, a.shape);\n  if(stopGrad===false && GradOps.minus){\n    ret = GradOps.minus(ret, [a,b]);\n  }\n  return ret;\n};\n\nOperators.mul = (a,b,stopGrad)=>{\n  stopGrad = stopGrad?stopGrad:false;\n  const mulOp   = (d1,d2)=>d1*d2;\n  const mapping = validateOps(a,b);\n  let newValue  = mapping(a, b, mulOp);        \n  return Number(newValue, a.shape);  \n};\n\nOperators.div = (a,b,stopGrad)=>{\n  stopGrad = stopGrad?stopGrad:false;\n  const divOp   = (d1,d2)=>d1/d2;\n  const mapping = validateOps(a,b);\n  let newValue  = mapping(a, b, divOp);     \n  return Number(newValue, a.shape);\n};\n\n\n// WEBPACK FOOTER //\n// ./src/number/operators.js"],"sourceRoot":""}